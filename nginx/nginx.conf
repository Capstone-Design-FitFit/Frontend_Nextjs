http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # HTTP에서 HTTPS로 리디렉션 (ALB가 HTTPS 처리)
    server {
        listen 80;
        server_name fitfit.kr;

        # fitfit.kr로 들어온 요청을 www.fitfit.kr로 리디렉션
        return 301 http://www.fitfit.kr$request_uri;
    }

    server {
        listen 80;
        server_name www.fitfit.kr;

        # 정적 파일 서빙
        location /_next/static/ {
            alias /usr/share/nginx/html/_next/static/;
        }

        # S3 요청 프록시
        location /s3/ {
            proxy_pass https://photo-clothing-result-s3.s3.amazonaws.com/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        }

        # Spring 서버로 프록시
        location /api/spring/ {
            proxy_pass http://localhost:8080/api/spring/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # FastAPI 서버로 프록시
        location /api/fastapi/ {
            proxy_pass http://localhost:8000/api/fastapi/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # React 서버로 프록시
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
